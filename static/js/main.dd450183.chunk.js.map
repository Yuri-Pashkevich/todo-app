{"version":3,"sources":["components/app.jsx","components/search-panel.jsx","components/app-header.jsx","components/todo-list-item.jsx","components/todo-list.jsx","components/item-status-filter.jsx","components/item-add-form.jsx","components/index.js","index.js"],"names":["maxId","SearchPanel","setValue","type","onChange","e","target","value","className","placeholder","AppHeader","toDo","done","TodoListItem","label","important","onDeleted","onToggleDone","onToggleImportant","classNames","onClick","TodoList","todos","delTask","todoElements","map","item","id","itemProps","key","length","ItemStatusFilter","filter","setfilter","elements","name","addClass","ItemAddForm","addTask","inputRef","useRef","spanRef","onSubmit","preventDefault","current","innerText","ref","App","items","searchItem","createTodoItem","todoData","useState","data","setData","defaultSearchValue","setSearchValue","setFilter","visibleItems","activeDoneFilter","toLowerCase","indexOf","toggleProperty","arr","propName","index","findIndex","el","oldItem","slice","doneCount","todoCount","newArr","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd450183.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { SearchPanel, AppHeader, TodoList, ItemStatusFilter, ItemAddForm } from './index';\r\nimport '../styles/app.scss'\r\n \r\nlet maxId = 0;\r\n\r\nexport default function App() {\r\n    const createTodoItem = (label, important) => {\r\n        return {\r\n            label,\r\n            important: important,\r\n            done: false,\r\n            id: maxId++\r\n        }\r\n    }\r\n    const todoData = [\r\n        createTodoItem('Drink coffee'),\r\n        createTodoItem('Make Awesome App', true),\r\n        createTodoItem('Have a lunch'),\r\n    ]\r\n    const [data, setData] = useState(todoData)\r\n    const searchItems = (items, searchItem) => {\r\n        if(searchItem.length === 0) {\r\n            return items\r\n        }\r\n        return items.filter(item => item.label.toLowerCase().indexOf(searchItem.toLowerCase()) > -1)\r\n    }\r\n    const [defaultSearchValue, setSearchValue] = useState('')\r\n    const [filter, setFilter] = useState('all')\r\n    const activeDoneFilter = (items, filter) => {\r\n        switch(filter) {\r\n            case 'all': \r\n                return items;\r\n            case 'active':\r\n                return items.filter(item => !item.done);\r\n            case 'done': \r\n                return items.filter(item => item.done);\r\n            default: \r\n                return items;\r\n        }\r\n    }\r\n    const visibleItems = activeDoneFilter(searchItems(data, defaultSearchValue), filter)\r\n    const toggleProperty = (arr, id, propName) => {\r\n        const index = arr.findIndex(el => el.id === id)\r\n        const oldItem = arr[index]\r\n        const done = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName],\r\n        }\r\n        const newArr = [\r\n            ...arr.slice(0, index),\r\n            done,\r\n            ...arr.slice(index + 1)\r\n        ]\r\n        return newArr\r\n    }\r\n    const onToggleDone = id => {\r\n        setData(toggleProperty(data, id, 'done'))\r\n    }\r\n    const onToggleImportant = id => {\r\n        setData(toggleProperty(data, id, 'important'))\r\n    }\r\n    const delTask = id => {\r\n        const newArr = data.filter(el => el.id !== id)\r\n        setData(newArr)\r\n    }\r\n    const addTask = text => {\r\n        setData([\r\n            ...data,\r\n            createTodoItem(text)\r\n        ])\r\n    }\r\n    const doneCount = data.filter(el => el.done).length\r\n    const todoCount = data.length - doneCount\r\n    \r\n    return (\r\n        <div className=\"bg\">\r\n            <div className=\"App\">\r\n                <div className=\"app-bg\">\r\n                    <AppHeader toDo={todoCount} done={doneCount} />\r\n                    <div className=\"top-panel d-flex\">\r\n                        <SearchPanel setValue={setSearchValue}/>\r\n                        <ItemStatusFilter filter={filter} setfilter={setFilter}/>\r\n                    </div>\r\n                    <TodoList delTask={delTask} onToggleDone={onToggleDone} onToggleImportant={onToggleImportant} todos={visibleItems}/>\r\n                    <ItemAddForm addTask={addTask} setData={setData}/>\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    ) \r\n}","import React from 'react'\r\nimport '../styles/search-panel.scss'\r\n\r\nexport const SearchPanel = ({ setValue }) => {\r\n    const onChange = e => {\r\n        setValue(e.target.value)\r\n    }\r\n    return <input type=\"text\" onChange={onChange} className=\"form-control search-input\" placeholder=\"Type to search\"/>\r\n}","import React from 'react'\r\nimport '../styles/app-header.scss';\r\n\r\nexport const AppHeader = ({ toDo, done }) => (\r\n    <div className=\"app-header d-flex align-items-end\">\r\n        <h1>Todo list</h1>\r\n        <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n)","import React from 'react';\r\nimport '../styles/todo-list-item.scss'\r\n\r\nexport const TodoListItem = ({ label, done, important, onDeleted, onToggleDone, onToggleImportant }) => {\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n        classNames += ' done';\r\n    }\r\n    if (important) {\r\n        classNames += ' important';\r\n    }\r\n    return (\r\n        <span className={classNames} >\r\n            <span className=\"todo-list-item-label\" onClick={onToggleDone}>{label}</span>\r\n            <button type=\"button\" className=\"btn btn-success btn-sm float-right\" onClick={onToggleImportant} >\r\n                <i className=\"fa fa-lightbulb-o\" />\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-danger btn-sm float-right\" onClick={onDeleted}>\r\n                <i className=\"fa fa-trash-o\" />\r\n            </button>\r\n        </span>\r\n)\r\n}","import React from 'react';\r\nimport { TodoListItem } from './todo-list-item';\r\nimport '../styles/todo-list.scss'\r\n\r\nexport const TodoList = ({ todos, delTask, onToggleDone, onToggleImportant }) => {\r\n    const todoElements = todos.map(item => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem \r\n                    onDeleted={() => delTask(id)} \r\n                    onToggleDone={() => onToggleDone(id)} \r\n                    onToggleImportant={() => onToggleImportant(id)} \r\n                    {...itemProps} \r\n                />\r\n            </li>\r\n        ) \r\n    });\r\n    return (\r\n        <ul className={`list-group ${todos.length >= 8 ? 'list-overflow' : null}`}>\r\n            {todoElements}\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport '../styles/item-status-filter.scss';\r\n\r\nexport const ItemStatusFilter = ({ filter, setfilter }) => {\r\n    const buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n    ]\r\n    const elements = buttons.map(({ name, label }) => {\r\n        const isActive = filter === name\r\n        const addClass = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n        const filterItems = () => {\r\n            setfilter(name)\r\n        }\r\n        return <button type=\"button\" className={`btn ${addClass}`} key={name} onClick={filterItems}>{label}</button>\r\n    })\r\n    return (\r\n        <div className=\"btn-group\">\r\n            {elements}\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, { useRef } from 'react'\r\nimport '../styles/item-add-form.scss'\r\n\r\nexport const ItemAddForm = ({ addTask }) => {\r\n    const inputRef = useRef();\r\n    const spanRef = useRef();\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if(inputRef.current.value === null || inputRef.current.value.length <= 2) {\r\n            spanRef.current.innerText = 'More than 2 chars expect and must be entered'\r\n            inputRef.current.value = null\r\n        } else {\r\n            addTask(inputRef.current.value)\r\n            inputRef.current.value = null\r\n            spanRef.current.innerText = null\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form className=\"item-add-form d-flex\" onSubmit={onSubmit}> \r\n                <input type=\"text\" className=\"form-control\" ref={inputRef} placeholder=\"Type here your next task\"/>\r\n                <button className=\"btn btn-info\" type=\"submit\">Add new task</button>\r\n            </form>\r\n            <span className=\"item-add-error\" ref={spanRef}></span>\r\n        </>\r\n    )\r\n}","import App from './app';\r\nimport { SearchPanel } from './search-panel';\r\nimport { AppHeader } from './app-header';\r\nimport { TodoList } from './todo-list';\r\nimport { TodoListItem } from './todo-list-item';\r\nimport { ItemStatusFilter } from './item-status-filter';\r\nimport { ItemAddForm } from './item-add-form';\r\n\r\nexport { SearchPanel, AppHeader, TodoList, TodoListItem, ItemStatusFilter, ItemAddForm }\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}